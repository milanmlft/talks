---
title: "R packages: What, Why and How?"
subtitle: "HTA Hackathon Belfast 2024"
date: 2024-08-06
author: "Milan Malfait"
format:
  revealjs:
    footer: "*{{< meta title >}}*"
---

## What

- R packages are the fundamental units of reproducible R code^[1]^
- They bundle together code, data, documentation, and tests, and are easy to share with others

. . .

![](figures/r-package-structure.png){width=60% fig-align="center" fig-alt="R package structure"}

[1]: https://r-pkgs.org/introduction.html


## But Why?

* Code sharing / reproducibility
* Convenience
* Conventions, good practices
* It makes you look really cool


## How

::: {style="margin-top: 200px; font-size: 1.2em;"}

What if I told you you can create an R package

::: {.fragment}
::: {.fragment .highlight-red}
*in just 10 minutes* 
:::
:::

::: {.fragment style="text-align: center; font-size: 2em;"}
ü§Ø
:::

:::

## [{devtools}](https://devtools.r-lib.org) to the rescue

```{.r}
library(devtools)
create_package("~/htahackathon2024/stringsplitter")
use_git()
use_r("split-string.R")
```

1. Set up package structure
2. Set up version control
3. Add our first function

## Add our first function

```{.r filename="R/split-string.R"}
splitstring <- function(x, sep = ",") {
  strsplit(x, split = sep)[[1]]
}
```

## üèéÔ∏è Test drive

```{.r}
load_all()
splitstring("a,b,c")
#> [1] "a" "b" "c"
```

. . .

<br>

```{.r}
check()
#> ... (output truncated) ...
#> ‚îÄ‚îÄ R CMD check ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#> ‚úî  checking DESCRIPTION meta-information ...
#> ‚úî  checking R files for syntax errors ...
#> ‚úî  checking whether the package can be loaded ...
#> ‚úî  checking R code for possible problems (1.3s)
#> ‚úî  checking examples ...
#> 
#> 
#> ‚îÄ‚îÄ R CMD check results ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ stringsplitter 0.0.1 ‚îÄ‚îÄ‚îÄ‚îÄ
#> 
#> 0 errors ‚úî | 0 warnings ‚úî | 0 notes ‚úî
```

## üèéÔ∏è Test drive

::: {.callout-note .nonincremental}
## RStudio keyboard shortcuts

- `Shift + Ctrl/Cmd + L` to load all
- `Shift + Ctrl/Cmd + E` to run checks
:::

## üìù Add documentation

Write some documentation in [roxygen format][roxygen] for your new function

. . . 

::: {.callout-tip}
In RStudio, go to `Code -> Insert Roxygen skeleton` to  make your life easier
:::

[roxygen]: https://roxygen2.r-lib.org/articles/rd.html

## üìù Document your function {auto-animate=true}

```{.r filename="R/split-string.R"}
splitstring <- function(x, sep = ",") {
  strsplit(x, split = sep)[[1]]
}
```

## üìù Document your function {auto-animate=true}

```{.r filename="R/split-string.R"}
#' Split a string into a vector of strings
#'
#' @param x a character string to be split
#' @param sep the separator on which to split
#'
#' @return a vector of strings
#' @export
#'
#' @examples
#' splitstring("alfa,bravo,charlie")
#' splitstring("alfa,bravo charlie", sep = " ")
splitstring <- function(x, sep = ",") {
  strsplit(x, split = sep)[[1]]
}
```

. . .

Generate the help pages by running `document()`

or `Ctrl/Cmd + Shift + D` in RStudio

## üìù Make `splitstring()` available

```{.r filename="R/split-string.R" code-line-numbers="7"}
#' Split a string into a vector of strings
#'
#' @param x a character string to be split
#' @param sep the separator on which to split
#'
#' @return a vector of strings
#' @export
#'
#' @examples
#' splitstring("alfa,bravo,charlie")
#' splitstring("alfa,bravo charlie", sep = " ")
splitstring <- function(x, sep = ",") {
  strsplit(x, split = sep)[[1]]
}
```

. . .

`document()` will update the [`NAMESPACE` file][namespace] for us

[namespace]: https://r-pkgs.org/dependencies-mindset-background.html#sec-dependencies-namespace

## üì¶ Build and install

```{.r}
install()
#> ‚îÄ‚îÄ R CMD build ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#> ‚úî  checking for file ‚Äò/Users/milan/htahackathon2024/stringsplitter/DESCRIPTION‚Äô ...
#> ‚îÄ  preparing ‚Äòstringsplitter‚Äô:
#> ‚úî  checking DESCRIPTION meta-information ...
#> ‚îÄ  checking for LF line-endings in source and make files and shell scripts
#> ‚îÄ  checking for empty or unneeded directories
#> ‚îÄ  building ‚Äòstringsplitter_0.0.1.tar.gz‚Äô
#> 
#> ... output truncated ...
#>
#> ** testing if installed package can be loaded from temporary location
#> ** testing if installed package can be loaded from final location
#> ** testing if installed package keeps a record of temporary installation path
#> * DONE (stringsplitter)
```

. . .

üéâ Success!

``` {.r}
library(stringsplitter)
splitstring("a,b,c")
#> [1] "a" "b" "c"
```
